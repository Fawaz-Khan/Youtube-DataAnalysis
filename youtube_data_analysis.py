"""
Youtube Data Analysis

Automatically generated by Colaboratory.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

videos=pd.read_csv('/content/drive/My Drive/Colab Notebooks/Data Analysis/1-Youtube Text Data Analysis/UScomments.csv',error_bad_lines=False)
videos.head()

from textblob import TextBlob

TextBlob('Logan Paul its yo big day ‼️‼️‼️').sentiment.polarity

polarity=[]
for i in videos['comment_text']:
    try:
        polarity.append(TextBlob(i).sentiment.polarity)
    except:
        polarity.append(0)

videos['polarity']=polarity

videos.head(20)

"""# Word Cloud Representation of Sentiments"""

comments_positive=videos[videos['polarity']==1]
comments_positive.head()

from wordcloud import WordCloud,STOPWORDS

total_comments=(''.join(comments_positive['comment_text']))
len(total_comments)

wordcloud=WordCloud(width=1000,height=500,stopwords=set(STOPWORDS)).generate(total_comments)
plt.figure(figsize=(10,5))
plt.imshow(wordcloud)
plt.axis('off')

comments_negative=videos[videos['polarity']==-1]
comments_negative.head()

from wordcloud import WordCloud,STOPWORDS

total_comments=(''.join(comments_negative['comment_text']))
len(total_comments)

wordcloud=WordCloud(width=1000,height=500,stopwords=set(STOPWORDS)).generate(total_comments)
plt.figure(figsize=(10,5))
plt.imshow(wordcloud)
plt.axis('off')

"""# Analyze Trending Tags & Views On YT"""

videos2=pd.read_csv('/content/drive/My Drive/Colab Notebooks/Data Analysis/1-Youtube Text Data Analysis/USvideos.csv',error_bad_lines=False)
videos2.head()

tags_complete=(''.join(videos2['tags']))

videos2['tags'][0]

import re

tags=re.sub('[^a-zA-Z]','',tags_complete)

tags

tags=re.sub(' +',' ',tags)

tags

wordcloud=WordCloud(width=1000,height=500,stopwords=set(STOPWORDS)).generate(tags)
plt.figure(figsize=(10,5))
plt.imshow(wordcloud)
plt.axis('off')

sns.regplot(data=videos2,x='views',y='likes',scatter_kws={'color': 'blue', 'alpha': 0.25}, line_kws = {'color': 'purple', 'alpha': 2.0})
plt.title('Regression Plot for Likes v/s Views')

sns.regplot(data=videos2,x='views',y='dislikes',scatter_kws={'color': 'red', 'alpha': 0.25}, line_kws = {'color': 'purple', 'alpha': 2.0})
plt.title('Regression Plot for Dislikes v/s Views')

df_corr=videos2[['views','likes','dislikes']]
sns.heatmap(df_corr.corr(),annot=True)

!pip install emoji

videos['comment_text'].isna().sum()

len(videos['comment_text'])

videos['comment_text'][4]

'\U0001F600'

str=''
for i in videos['comment_text']:
  list=[c for c in [i] if c in emoji.UNICODE_EMOJI]
  for ele in list:
    str=str+ele

print(str)

len(str)

len(set(str))

res={i:str.count(i) for [i] in set(str)}
res

res={k: v for k, v in sorted(res.items(), key=lambda item: item[1])}
res

keys=[*res.keys()]
values=[*res.values()]

keys[0]

pd.DataFrame({'chars':keys[-11:],'num':values[-11:]})

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
from matplotlib import pyplot as plt
import numpy as np
emoji_number =[0,1,2,3,4,5,6,7,8,9,10]
Frequency = [23,24,28,28,38,56,90,120,130,189,312]
x_pos = np.arange(len(year))
plt.bar(emoji_number,Frequency,color = '#535353',edgecolor='#FC766AFF',linewidth=1.5)
plt.title('Emoji Frequency Bar Graph')
plt.xlabel('Emoji Number')
plt.ylabel('Frequency')
plt.figure(figsize=(15,15))
plt.show()